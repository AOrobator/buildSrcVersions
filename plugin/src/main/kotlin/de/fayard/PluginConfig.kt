package de.fayard

import com.squareup.kotlinpoet.CodeBlock
import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.Moshi
import okio.buffer
import okio.source
import java.io.File

object PluginConfig {

    /**
     * The name of the extension for configuring the runtime behavior of the plugin.
     *
     * @see org.gradle.plugins.site.SitePluginExtension
     */
    const val EXTENSION_NAME = "buildSrcVersions"

    const val DEFAULT_LIBS = "Libs"
    const val DEFAULT_VERSIONS = "Versions"
    const val DEFAULT_INDENT = "  "

    const val BENMANES_REPORT_PATH = "build/dependencyUpdates/report.json"

    val DEFAULT_REJECTED_KEYWORDS = mutableListOf("alpha", "beta", "rc", "cr", "m", "preview", "eap")


    /**
     * We don't want to use meaningless generic libs like Libs.core
     *
     * Found many inspiration for bad libs here https://developer.android.com/jetpack/androidx/migrate
     * **/
    val MEANING_LESS_NAMES: List<String> = listOf(
        "common", "core", "core-testing", "testing", "runtime", "extensions",
        "compiler", "migration", "db", "rules", "runner", "monitor", "loader",
        "media", "print", "io", "media", "collection", "gradle", "android"
    )

    val INITIAL_GITIGNORE = """
.gradle/
build/
"""

    val GRADLE_KDOC = """
See issue 19: How to update Gradle itself?
https://github.com/jmfayard/buildSrcVersions/issues/19
"""

    val KDOC_LIBS = """
    Generated by https://github.com/jmfayard/buildSrcVersions

    Update this file with
      `$ ./gradlew buildSrcVersions`
    """.trimIndent()

    val KDOC_VERSIONS = """
    Generated by https://github.com/jmfayard/buildSrcVersions

    Find which updates are available by running
        `$ ./gradlew buildSrcVersions`
    This will only update the comments.

    YOU are responsible for updating manually the dependency version.
    """.trimIndent()


    const val INITIAL_BUILD_GRADLE_KTS = """
plugins {
    `kotlin-dsl`
}
repositories {
    mavenCentral()
}
        """

    val issue47 = CodeBlock.of("See issue #47: how to update buildSrcVersions itself https://github.com/jmfayard/buildSrcVersions/issues/47")


    val moshiAdapter: JsonAdapter<DependencyGraph> by lazy {
        Moshi.Builder().build().adapter(DependencyGraph::class.java)
    }

    fun readGraphFromJsonFile(jsonInput: File): DependencyGraph {
        return moshiAdapter.fromJson(jsonInput.source().buffer())!!
    }

    val VERSIONS_ONLY_START = "<buildSrcVersions>"
    val VERSIONS_ONLY_END = "</buildSrcVersions>"
    val VERSIONS_ONLY_INTRO = """
        |// Generated by ./gradle buildSrcVersions
        |// See https://github.com/jmfayard/buildSrcVersions/issues/54
        |""".trimMargin()
}
